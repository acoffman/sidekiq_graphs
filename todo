# TODO

- I feel like store is too coupled to "start the workflow" is that okay? Maybe not... how do we effectively decouple them


# Ideas

- Should Node be a mixin or abstract class and then we make a RedisNode?
- Would [Redis::Objects][] be useful?
- Maybe it makes sense for us to define a persistence API, and then dependency inject an instance of something to the graph instance (redis, memory, etc) rather than having them be helper classes that take graph objects

[Redis::Objects]: https://github.com/nateware/redis-objects
